server:
  port: ${SERVER_PORT:7002}
spring:
  config:
    import:
      optional:file:./secrets-local.yml
  rabbitmq:
    host: ${MENSAGERIA_HOST}
    port: ${MENSAGERIA_PORT}
    username: ${MENSAGERIA_USERNAME}
    password: ${MENSAGERIA_PASSWORD}

  cloud:
    stream:
      rabbit:
        default:
          producer:
            exchange-type: fanout
          consumer:
            exchange-type: fanout
        bindings:
          registroCnabEventProducer-out-0:
            producer:
              exchange-type: fanout
      function:
        definition: validacaoEventConsumer
      bindings:
        validacaoEventConsumer-in-0:
          destination: ${MENSAGERIA_BROKER_VALIDACAO_CNAB}
          group: ${MENSAGERIA_QUEUE_VALIDACAO_CNAB}
        registroCnabEventProducer-out-0:
          content-type: application/json
          producer:
            exchangeType: fanout
          destination: ${MENSAGERIA_BROKER_REGISTRO_CNAB_CRIACAO}
        arquivoCnabEventProducer-out-0:
          destination: ${MENSAGERIA_BROKER_ARQUIVO_CNAB_CRIACAO}

  datasource:
    driver-class-name: ${DATABASE_DRIVER_CLASSNAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    url: ${DATABASE_URL}
  jpa:
    database: postgresql
    show-sql: true
    hibernate:
      ddl-auto: ${DATABASE_DDL_AUTO:none}
    properties:
      hibernate:
        dialect: ${DATABASE_HIBERNATE_DIALECT}
        default_schema: ${DATA_BASE_SCHEMA}
logging:
  level:
    root: warn






