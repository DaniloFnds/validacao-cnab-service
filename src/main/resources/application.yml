server:
  port: ${SERVER_PORT:7002}
  error:
    include-message: always
spring:
  jackson:
    property-naming-strategy: SNAKE_CASE
  config:
    import:
      ${SPRING_CONFIG_IMPORTS:classpath:dhan-config-actuator.yml}
  rabbitmq:
    host: ${MENSAGERIA_HOST}
    port: ${MENSAGERIA_PORT}
    username: ${MENSAGERIA_USERNAME}
    password: ${MENSAGERIA_PASSWORD}

  cloud:
    stream:
      rabbit:
        default:
          producer:
            exchange-type: fanout
          consumer:
            exchange-type: fanout
        bindings:
          registroCnabEventProducer-out-0:
            producer:
              exchange-type: fanout
              batch-size: 300
          validacaoEventConsumer-in-0:
            consumer:
              exchange-type: fanout
              durable-subscription: true
              missing-queues-fatal: true
              max-concurrency: 1
              batch-size: 1
              prefetch: 1
      function:
        definition: validacaoEventConsumer
      bindings:
        validacaoEventConsumer-in-0:
          content-type: application/json
          destination: ${MENSAGERIA_BROKER_VALIDACAO_CNAB}
          group: ${MENSAGERIA_QUEUE_VALIDACAO_CNAB}
        registroCnabEventProducer-out-0:
          content-type: application/x-protobuf
          destination: ${MENSAGERIA_BROKER_REGISTRO_CNAB_CRIACAO}
        arquivoCnabEventProducer-out-0:
          destination: ${MENSAGERIA_BROKER_ARQUIVO_CNAB_CRIACAO}

  datasource:
    driver-class-name: ${DATABASE_DRIVER_CLASSNAME}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    url: ${DATABASE_URL}
    hikari:
      pool-name: ${spring.application.name}
      connection-timeout: 20000
      minimum-idle: 5
      maximum-pool-size: 10
      idle-timeout: 10000
      max-lifetime: 1800000
      schema: ${DATA_BASE_SCHEMA}
  jpa:
    database: postgresql
    show-sql: ${DATABASE_SHOW_SQL:false}
    hibernate:
      ddl-auto: ${DATABASE_DDL_AUTO:none}
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    properties:
      hibernate:
        dialect: ${DATABASE_HIBERNATE_DIALECT}
        default_schema: ${DATA_BASE_SCHEMA}
    open-in-view: false

logging:
  level:
    root: ${LOGGING_ROOT_LEVEL:info}
feign:
  client:
    config:
      default:
        connect-timeout: 3000
        read-timeout: 50000
        logger-level: NONE
        metrics:
          enabled: true
      layout-service:
        url: ${LAYOUT_SERVICE_URL}
        default-request-headers:
          Authorization: ${LAYOUT_SERVICE_SECRET}





